{
  "permissions": {
    "allow": [
      "Bash(chmod:*)",
      "Bash(python3:*)",
      "Bash(./run_example.sh)",
      "Bash(mkdir:*)",
      "Bash(docker-compose build:*)",
      "Bash(docker compose build:*)",
      "Bash(docker compose:*)",
      "Bash(curl:*)",
      "Bash(for node in node2 node3 validator)",
      "Bash(do)",
      "Bash(docker cp:*)",
      "Bash(done)",
      "Bash(. venv/bin/activate)",
      "Bash(python -m pytest tests/unit/test_blockchain.py -v --tb=short)",
      "Bash(python -m pytest tests/unit/test_transactions.py -v --tb=short)",
      "Bash(python:*)",
      "Bash(mv:*)",
      "Bash(docker build:*)",
      "Bash(. ../venv/bin/activate)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker:*)",
      "Bash(./start-services.sh:*)",
      "Bash(for container in decoin-node1 decoin-node2 decoin-node3 decoin-validator decoin-frontend)",
      "Bash(do echo -n \"$container: \")",
      "Bash(for i in {1..4})",
      "Bash(for i in {1..6})",
      "Bash(for i in {1..5})",
      "Bash(for port in 11080 11081 11084 11087)",
      "Bash(do echo \"=== Node on port $port ===\")",
      "Bash(for i in {10..25})",
      "Bash(echo \" $i\")",
      "Bash(for:*)",
      "Bash(do echo -n \"Port $port: \")",
      "Bash(./quick_test.sh:*)",
      "Bash(bash:*)",
      "Bash(timeout:*)",
      "Bash(./robust_stress.sh:*)",
      "Bash(do basename \"$file\")",
      "Bash(grep:*)",
      "Bash(do sed -i 's/\"\"validator_address\"\": \"\"validator[0-9]_address\"\"/\"\"validator_address\"\": null/' /home/unidatum/github/decoin/config/docker/node$node.json)",
      "Bash(sed:*)",
      "Bash(do docker cp src/network.py $container:/app/src/network.py)",
      "Bash(do docker cp src/transactions.py $container:/app/src/transactions.py)",
      "Bash(do docker cp src/blockchain.py $container:/app/src/blockchain.py)",
      "Bash(do echo -n \"Port $port genesis: \")",
      "Bash(./simple_stress.sh:*)",
      "Bash(awk:*)",
      "Bash(npm run build:*)",
      "Bash(node:*)"
    ],
    "deny": [],
    "ask": []
  }
}